name: Python
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  style:
    name: "Check the code format"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install isort black black_nbconvert
      - name: Check the style
        run: |
          isort -c python
          black --check python
          black_nbconvert --check .

  # fast_run:
  #   name: "Test 'fast run' mode"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install -U pip
  #         python -m pip install ".[test]"
  #       env:
  #         CFLAGS: "-DCELERITE2_FAST_RUN"
  #     - name: Run the unit tests
  #       run: python -m pytest -v python/test --ignore=python/test/theano

  build:
    name: "py${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install ".[test]"
        env:
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
      - name: Run the unit tests
        run: python -m pytest --cov celerite2 python/test
      - name: Convert coverage
        run: python -m coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  theano:
    name: "Theano / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -q numpy scipy theano mkl-service
          python -m pip install -U pip
          python -m pip install ".[test,theano]"
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/theano
      - name: Convert coverage
        shell: bash -l {0}
        run: python -m coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  pytorch:
    name: "PyTorch / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install ".[test,torch]"
      - name: Run the unit tests
        run: python -m pytest --cov celerite2 python/test/torch
      - name: Convert coverage
        run: python -m coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
