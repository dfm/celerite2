name: Python
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  style:
    name: "Check the code format"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install isort black black_nbconvert
      - name: Check the style
        run: |
          isort -c python
          black --check python
          black_nbconvert --check .

  build:
    name: "py${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test]"
        env:
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
      - name: Run the unit tests
        run: python -m pytest --cov celerite2 python/test
      - name: Coverage
        uses: exoplanet-dev/coveralls-python-action@develop
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true
        with:
          parallel: true

  theano:
    name: "Theano"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          auto-update-conda: true
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -q numpy scipy theano mkl-service
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test,theano]"
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/theano
      - name: Coverage
        uses: exoplanet-dev/coveralls-python-action@develop
        continue-on-error: true
        with:
          parallel: true

  pytorch:
    name: "PyTorch"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          auto-update-conda: true
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install pytorch torchvision cpuonly -c pytorch
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test,torch]"
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/torch
      - name: Coverage
        uses: exoplanet-dev/coveralls-python-action@develop
        continue-on-error: true
        with:
          parallel: true

  jax:
    name: "jax"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          auto-update-conda: true
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test,jax]"
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/jax
      - name: Coverage
        uses: exoplanet-dev/coveralls-python-action@develop
        continue-on-error: true
        with:
          parallel: true

  coverage:
    needs: [build, theano, pytorch, jax]
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: exoplanet-dev/coveralls-python-action@develop
      with:
        parallel-finished: true
